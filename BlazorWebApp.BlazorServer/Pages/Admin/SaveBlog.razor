@page "/admin/manage-blogs/new"
@page "/admin/manage-blogs/edit/{urlBlogId:int?}"

@inject CategoryService CategoryService

<div class="container">
    <div class="d-flex justify-content-between align-items-center">
         <h3>Save Blog Post</h3>
         
        <NavLink href="/admin/manage-blogs" class="btn btn-primary btn-sm">Back to Manage Blog Posts</NavLink>
    </div>

    <div class="row">
        <div class="col-sm-12">
            <EditForm Model="model">
                <DataAnnotationsValidator/>
                <div class="mb-3">
                    <label class="col-form-label">Title: </label>
                    <InputText @bind-Value="model.Title" class="form-control" placeholder="Enter Title"></InputText>
                    <ValidationMessage For="() => model.Title" />
                </div>
                <div class="mb-3">
                    <label class="col-form-label">Slug: </label>
                    <InputText @bind-Value="model.Slug" class="form-control" placeholder="Enter Title"></InputText>
                    <ValidationMessage For="() => model.Slug" />
                </div>
                <div class="mb-3">
                    <label class="col-form-label">Category: </label>
                    <InputSelect @bind-Value="model.CategoryId" class="form-control">
                        <option value="">Select Category</option>
                    </InputSelect>
                    <ValidationMessage For="() => model.CategoryId" />
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {

    [Parameter]
    public int? urlBlogId { get; set; }

    private int BlogId => urlBlogId ?? 0;

    private BlogPost model = new();

    private IEnumerable<Category> categories = Enumerable.Empty<Category>();

    protected override async Task OnInitializedAsync()
    {
        var categories = await CategoryService.GetCategoriesAsync();

        if(categories?.Any() == true)
        {
            
        }
    }
}
