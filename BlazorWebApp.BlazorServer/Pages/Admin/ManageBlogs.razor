@page "/admin/manage-blogs"
@using BlazorWebApp.BlazorServer.Models
@inject BlogPostService BlogService



<div class="container">
    <div class="d-flex justify-content-between align-items-center">
        <h3>Manage Blogs</h3>
        <NavLink class="btn btn-primary btn-sm" href="/admin/manage-blogs/new">+ Add new Blog Post</NavLink>

    </div>
    <table class="table">
        <thead>
            <tr>
                <th>#</th>
                <th>Id</th>
                <th>Title</th>
                <th>Category</th>
                <th>Created/Modified</th>
                <th>Published</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @if(_isLoading)
            {
                <tr>
                    <td colspan="7">Loading blog posts...</td>
                </tr>
            }
            else if (!_isLoading && (_posts is null || !_posts.Any()))
            {
                <tr>
                    <td colspan="7" class="text-center">
                        <h3 class="mb-3">No blog posts found</h3>
                        <NavLink href="/admin/manage-blogs/new">+ Create first blog post</NavLink>
                    </td>
                </tr>
            }
            else
            {
                int sno = 1;
                @foreach (var post in _posts!)
                {
                    var editBlogLink = $"/admin/manage-blogs/edit/{post.Id}";

                    <tr>
                        <td>@sno++ </td>
                        <td>@post.Id</td>
                        <td>@post.Title</td>
                        <td>@post.CategoryName</td>
                        <td>
                            @(post.ModifiedOn.HasValue 
                              ? post.ModifiedOn.Value.ToShortDateString() 
                              : post.CreatedOn.ToShortDateString() )
                        </td>
                        <td>
                            @if(post.IsPublished)
                            {
                                <span class="text-success">Yes</span>
                            }
                            else
                            {
                                <span class="text-danger">No</span>
                            }
                        </td>
                        <td>
                            @* Edit Post link *@
                            <NavLink class="btn btn-primary btn-sm" href="CREATE_BLOG_POST_LINK">Edit</NavLink>

                        </td>

                    </tr>
                }
            }
            
        </tbody>
    </table>

</div>



@code {
    private bool _isLoading = false;
    private IEnumerable<BlogPost>? _posts = null;

    private async Task LoadBlogPosts()
    {
        _posts = await BlogService.GetBlogsAsync();
    }

    protected override async Task OnInitializedAsync()
    {
        _isLoading = true;

        try
        {
            // await Task.Delay(3000);
            // _posts = Enumerable.Empty<BlogPost>();
            await LoadBlogPosts();

        }
        catch(Exception ex)
        {

        }
        finally
        {
            _isLoading = false;
        }

    }

}
