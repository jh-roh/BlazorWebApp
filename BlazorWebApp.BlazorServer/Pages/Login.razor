@page "/login"
@using BlazorWebApp.BlazorServer.Models

@inject NavigationManager NavigationManager

@inject BlogAuthenticationProvider AuthenticationProvider

@if(_isProcessing)
{
    <div class="overlay position-fixed"></div>
    <div class="loading-wrapper position-fixed d-flex justify-content-center align-items-center">
        <div class="loading-text font-large text-white">Logging-in...</div>
    </div>
}

<EditForm Model="_model" OnValidSubmit="LoginAsync">
    <DataAnnotationsValidator/>
    <div class="container mt-5 d-flex justify-content-center" >
        <div class="card" style="width:450px;">
            <div class="card-header">
                <h2>Login</h2>
            </div>
            <div class="card-body">
                <div class="mb-3">  
                    <label class="col-form-label">Username</label>
                    <InputText @bind-Value="_model.Username" class="form-control" placeholder="Enter Username"></InputText>
                    <ValidationMessage For="() => _model.Username"></ValidationMessage>
                </div>
                <div class="mb-3">
                    <label class="col-form-label">Password</label>
                    <InputText @bind-Value="_model.Password" class="form-control" placeholder="Enter Passowrd"></InputText>
                    <ValidationMessage For="() => _model.Password"></ValidationMessage>
                </div>
                @if(!string.IsNullOrWhiteSpace(_error))
                {
                    <p class="text-danger">@_error</p>
                }
            </div>
            <div class="card-footer">
                <button type="submit" class="btn btn-primary">Login</button>
            </div>
        </div>
    </div>
</EditForm>
@code {
    private LoginModel _model = new();

    private bool _isProcessing = false;

    private string _error = null;

    private async Task LoginAsync()
    {
        _isProcessing = true;
        try
        {
            _error= await AuthenticationProvider.LoginAsync(_model);

            if(!string.IsNullOrWhiteSpace(_error))
            {
                _isProcessing = false;
            }
            else
            {
                var loggedInUser = AuthenticationProvider.LoggedInUser;

                if(loggedInUser.IsEmpty())
                {
                    _error = "Could not login. Please try again.";
                }
                else
                {
                    //successful login
                    NavigationManager.NavigateTo("/");
                }
            }


        }
        catch(Exception ex)
        {
            _isProcessing = false;
            _error = ex.Message;
        }
        
    }

}
