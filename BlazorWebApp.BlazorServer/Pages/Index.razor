@page "/"

@inject BlogPostService BlogPostService
@inject CategoryService CategoryService

<div class="container">
    <div class="row">
        <div class="col-sm-9">
            <h3>Latest Posts</h3>
            <hr/>
            @if(posts.Any())
            {
                <div class="d-flex justify-content-center flex-column align-items-center" style="min-height: 250px">
                    <h3>No blog posts found</h3>
                    <AuthorizeView>
                        <Authorized>
                            <NavLink href="/admin/manage-blogs/new" class="btn btn-primary">Click here to create a new blog posts</NavLink>
                        </Authorized>
                        <NotAuthorized>
                            <p>Please check back later</p>
                        </NotAuthorized>
                    </AuthorizeView>
                </div>
            }
        </div>
        <div class="col-sm-3">
            <h3>Categories</h3>
            <hr/>
            <ul class="list-unstyled"> 
                @foreach(var category in categories)
                {
                    <li class="mb-1 border-bottom p-1">
                        <NavLink href="CATEGORY_BLOG_POSTS" class="text-decoration-none py-2 text-truncate" >@category.Name</NavLink>
                    </li>
                }
            </ul>
        </div>
    </div>
</div>

@code{
    private IEnumerable<BlogPost> posts = Enumerable.Empty<BlogPost>();
    private IEnumerable<Category> categories = Enumerable.Empty<Category>();

    protected override async Task OnInitializedAsync()
    {
        var postsTask = BlogPostService.GetPostAsync(publishedOnly:true);
        categories = await CategoryService.GetCategoriesAsync();

        posts = await postsTask;
    }
}